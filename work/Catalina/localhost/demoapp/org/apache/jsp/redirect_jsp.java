/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2020-02-04 17:40:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.sql.*;
import oracle.jdbc.driver.*;
import oracle.jdbc.OracleDriver;
import java.util.*;
import javax.servlet.*;
import org.json.simple.*;
import org.json.simple.parser.*;
import java.net.*;
import java.io.*;
import java.util.*;
import java.net.*;
import javax.xml.parsers.*;
import org.w3c.dom.*;

public final class redirect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/read_one.jsp", Long.valueOf(1527219588000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

String sessionid = "";
String pg = "index_app.jsp";

if (request.getParameter("sessionid") == null) {
   //session.invalidate();
   sessionid = UUID.randomUUID().toString();
} else {
   sessionid = (String) request.getParameter("sessionid");
}

//
// Logout ...
//
if (request.getParameter("logout") != null) {
   session.invalidate();
   response.sendRedirect("index.jsp?sessionid="+sessionid);
   return;
}

//
// Reset Session ...
//
if (request.getParameter("reset") != null) {
   String cdsid = (String)session.getAttribute("cdsid");

   String path = "";
   String webRootPath = application.getRealPath("/").replace('\\', '/');
   // ... or ... webRootPath = getServletContext().getRealPath("/").replace('\\', '/');
   //out.println("Path "+webRootPath+"<br />");
   path = webRootPath+"META-INF"+File.separator;
   //out.println("Path: "+path+"<br />");

   String sessionFilename = path+"session_"+cdsid+"_"+sessionid+".json";

   File sessionFile = new File(sessionFilename);
   //sessionFile.setWritable(true);
   String delfix = "";
   if ( !sessionFile.delete() ) {
      out.println("Error in deleting file "+sessionFilename);
      delfix = "1";
   } else {
      out.println("File "+sessionFilename+" Deleted Successfully ...");
   }
   response.sendRedirect(""+request.getParameter("page")+"?sessionid="+sessionid+delfix);   //&filename="+sessionFilename);
   return;
}

//
// Login ...
//
if (request.getParameter("login") != null) {
   // put login code here ...
   String username=(String)request.getParameter("username");
   String password=(String)request.getParameter("password");
   //request.getSession(true);
   session.setAttribute("cdsid",username);
   sessionid=request.getParameter("login");
} else {
   sessionid=request.getParameter("sessionid");
}

//
// Request Variables ...
//
String dbType = request.getParameter("dbType");
session.setAttribute("dbType",dbType);
String dataSource = request.getParameter("dataSource");
session.setAttribute("dataSource",dataSource);
String dbname = request.getParameter("dbname");
session.setAttribute("dbname",dbname);
String envtype = request.getParameter("envtype");
session.setAttribute("envtype",envtype);

String sqlUpper = request.getParameter("sqlUpper");
String sqlSchema = request.getParameter("sqlSchema");
String sqlQuoted = request.getParameter("sqlQuoted");
String dboSchema = "";

// 
// Variables ...
//
String ds = "";
String msg = "";
String str = "";
String vhgt = "";

String url = "";
String username = "";
String password = "";
//String rstr = "";

//String dbType = "mongo";
//String dataSource = "mongo_target3";
//String sqlSchema = "";
String connUrl = "";

session.setAttribute("username",username);
session.setAttribute("password",password);
session.setAttribute("connUrl",connUrl);

/*
int arr[] = new int[8];
arr[0] = 5;
arr[1] = 10;
arr[2] = 20;
arr[3] = 25;
arr[4] = 50;
arr[5] = 100;
arr[6] = 200;
arr[7] = 500;
session.setAttribute("rows_per_page",arr);
*/

String sql[] = new String[6];
sql[0] = "select * from employees";   // sql_select_employees
// order by 1
sql[1] = "select patient_id,firstname,lastname,address,email,city,zipcode,social_security_number,phone_number from patient";  // sql_select_patient
sql[2] = "select patient_id,account_number,medical_record_number,phone_number,cc_number from patient_details";   // sql_select_patientdetails
sql[3] = "select patient_id,medical_record_number,address,phone_number,email from medical_records";    // sql_select_medicalrecords
sql[4] = "delete from employees where first_name =";    // sql_delete_employee
sql[5] = "insert into employees (first_name,last_name,dept_name,city) values ";   // sql_insert_newemp

//
// Reset Session Variables ...
//
session.setAttribute("sysMessage","");
session.setAttribute("dbSource","");
session.setAttribute("sql_select_employees","");
session.setAttribute("sql_select_patient","");
session.setAttribute("sql_select_patientdetails","");
session.setAttribute("sql_select_medicalrecords","");
session.setAttribute("sql_delete_employee","");
session.setAttribute("sql_insert_newemp","");

//
// Supported data source type ...
//
if (dbType  != null) {
   msg = "Hello <b>"+dbType+"</b> !";

   // 
   // Common SQL Code for numerous databases ...
   //
   if ( dbType.equals("mssql") || dbType.equals("sybase") || dbType.equals("mysql") || dbType.equals("oracle") || dbType.equals("db2") ) {

      // 
      // Do Nothing ...
      //

   } else if ( dbType.equals( "mongo" ) ) {


      out.write('\n');
      out.write('\n');


//
// Read context.xml file ...
//

//String url = "";
//String username = ""; 
//String password = "";
String rstr = "";

//String dbType = "mongo";
//String dataSource = "mongo_target3";
//String sqlSchema = "";
//String connUrl = "";

try {

   //Integer counter;
   String name = "";
   String auth = ""; 
   String type = "";
   String driverClassName = "";
   String maxActive = "";
   String maxIdle = ""; 
   String validationQuery = ""; 
   String testOnBorrow = "";
   String maxWait = "";

   // 
   // Read XML file into Parse Doc ...
   //
   String XmlPath = "/META-INF/context.xml";
   Document doc;
   String appPath = application.getRealPath("/");
   DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
   DocumentBuilder db=dbf.newDocumentBuilder();
   doc=db.parse(appPath + XmlPath);

   //
   // Get all Resource Tags ...
   //
   NodeList nl = doc.getElementsByTagName("Resource");

   // 
   // Loop thru each Resource element ...
   //
   Element el;
   for (int i = 0; i < nl.getLength(); i++) {
      el = (org.w3c.dom.Element) nl.item(i);

      //
      // Get Element Attributes ...
      //
      //counter = Integer.valueOf(el.getAttribute("counter"));
      name = el.getAttribute("name");
      String[] dsarr = name.split("/");

      //if (name.equals("jdbc/mongo_source")) {
      if (dataSource.equals(dsarr[1])) {

         auth = el.getAttribute("auth");
         type = el.getAttribute("type");
         driverClassName = el.getAttribute("driverClassName");
         url = el.getAttribute("url");
         username = el.getAttribute("username");
         password = el.getAttribute("password");
         maxActive = el.getAttribute("maxActive");
         maxIdle = el.getAttribute("maxIdle");
         validationQuery = el.getAttribute("validationQuery");
         testOnBorrow = el.getAttribute("testOnBorrow");
         maxWait = el.getAttribute("maxWait");
         //out.println(i + ") name = " + name + " " + url + " " + username + "/" + password + "<br />");

         rstr = "    &lt;Resource name=\""+name+"\" auth=\""+auth+"\"\n          type=\""+type+"\" driverClassName=\""+driverClassName+"\"\n          url=\""+url+"\"\n          username=\""+username+"\" password=\""+password+"\" maxActive=\""+maxActive+"\" maxIdle=\""+maxIdle+"\" validationQuery=\""+validationQuery+"\"\n          testOnBorrow=\""+testOnBorrow+"\" maxWait=\""+maxWait+"\"/&gt;\n";

          //out.println("<pre>"+rstr+"</pre>");

      } 

   }    // end of loop 	

} catch(Exception e) {
   out.println(e.getMessage()); 
}

//out.println(""+rstr+"<br />");

//out.println(""+url+" : "+username+" : "+password+"<br />");

//
// Mongo requires a different JDBC Connect String ...
//
if (dbType.equals("mongo")) {
   //      0       1        2               3
   //jdbc:mongodb://172.16.160.133:27017/delphixdb
   String[] arr = url.split("/");
   //out.println("parts[2]: "+arr[2]+"<br />");
   //out.println("parts[3]: "+arr[3]+"<br />");

   if (arr != null && 2 >= 0 && 2 < arr.length && arr[2] != null) {
      // arr[i] exists and is not null
      //connUrl = "mongodb://"+arr[2];
      connUrl = "mongodb://"+username+":"+password+"@"+arr[2]+"/"+arr[3]+"";
   } else {
      connUrl = "missing";
   }
   if (arr != null && 3 >= 0 && 3 < arr.length && arr[3] != null) {
      // arr[i] exists and is not null
      sqlSchema = arr[3];
   } else {
      sqlSchema = "missing";
   }
} else if (dbType.equals("oracle")) {
   //         0                1              		// arr
   //                           0          1		// arr1
   //                                   0     1		// arr2
   // jdbc:oracle:thin:@172.16.160.133:1521/orcl 
   String[] arr = url.split("@");
   if (arr != null && arr[1] != null) {
      String[] arr1 = arr[1].split(":");
      String[] arr2 = arr1[1].split("/");
      connUrl = url;  // "xxxxxx://"+username+":"+password+"@"+arr2[0]+"/"+arr2[1]+"";
      sqlSchema = arr2[1];
   } else {
      connUrl = "missing";
      sqlSchema = "missing";
   }
} else if (dbType.equals("mssql")) {
   // url: jdbc:sqlserver://172.16.160.134:1433;DatabaseName=delphix_demo;Schema=dbo
   String[] arr3 = url.split(";");
   if (arr3 != null && arr3[1] != null) {
      String[] arr4 = arr3[1].split("=");
      sqlSchema = arr4[1];
   } else {
      sqlSchema = "";
   }
   if (arr3 != null && arr3[2] != null) {
      String[] arr5 = arr3[2].split("=");
      dboSchema = arr5[1];
   } else {
      dboSchema = "";
   } 
   connUrl = url;
} else {
   connUrl = url;
   sqlSchema = "";
}
//out.println("schema: "+dboSchema+"<br />");
//out.println("database: "+sqlSchema+"<br />");
//out.println("connUrl: "+connUrl+"<br />");


      out.write('\n');
      out.write('\n');

      session.setAttribute("connUrl",connUrl);
      session.setAttribute("sqlSchema",sqlSchema);
      session.setAttribute("username",username);
      session.setAttribute("password",password);
      pg = "mongo.jsp";


   } else if ( dbType.equals( "postgresql" ) ) {

      // 
      // PostgreSQL ...
      //
//      if ( sqlSchema != null ) sqlSchema = sqlSchema+".";
//      else 
sqlSchema = "";
//      if ( sqlQuoted != null) 
sqlQuoted = "\"";
//      else sqlQuoted = "";
      sql[0] = "select * from "+sqlSchema+sqlQuoted+"EMPLOYEES"+sqlQuoted;   // sql_select_employees
      sql[1] = "select "+sqlQuoted+"patient_id"+sqlQuoted+","+sqlQuoted+"firstname"+sqlQuoted+","+sqlQuoted+"lastname"+sqlQuoted+","+sqlQuoted+"address"+sqlQuoted+","+sqlQuoted+"email"+sqlQuoted+","+sqlQuoted+"city"+sqlQuoted+","+sqlQuoted+"social_security_number"+sqlQuoted+","+sqlQuoted+"phone_number"+sqlQuoted+" from "+sqlSchema+""+sqlQuoted+"patient"+sqlQuoted+"";   // sql_select_patient
      sql[2] = "select "+sqlQuoted+"patient_id"+sqlQuoted+","+sqlQuoted+"account_number"+sqlQuoted+","+sqlQuoted+"medical_record_number"+sqlQuoted+","+sqlQuoted+"phone_number"+sqlQuoted+","+sqlQuoted+"cc_number"+sqlQuoted+" from "+sqlSchema+""+sqlQuoted+"patient_details"+sqlQuoted+"";   // sql_select_patientdetails
      sql[3] = "select "+sqlQuoted+"patient_id"+sqlQuoted+","+sqlQuoted+"medical_record_number"+sqlQuoted+","+sqlQuoted+"address"+sqlQuoted+","+sqlQuoted+"phone_number"+sqlQuoted+","+sqlQuoted+"email"+sqlQuoted+" from "+sqlSchema+""+sqlQuoted+"medical_records"+sqlQuoted+"";    // sql_select_medicalrecords
      sql[4] = "delete from "+sqlSchema+""+sqlQuoted+"employees"+sqlQuoted+" where "+sqlQuoted+"first_name"+sqlQuoted+" =";    // sql_delete_employee
      sql[5] = "insert into "+sqlSchema+""+sqlQuoted+"employees"+sqlQuoted+" ("+sqlQuoted+"first_name"+sqlQuoted+","+sqlQuoted+"last_name"+sqlQuoted+","+sqlQuoted+"dept_name"+sqlQuoted+","+sqlQuoted+"city"+sqlQuoted+") values ";   // sql_insert_newemp

   } else {
      // 
      // Unknown dbType ... 
      // 
      pg = "index.jsp";
      msg = "Error: Unknown data type "+dbType;
   }

   //
   // Upper Case SQL option ...
   //
   if ( sqlUpper != null ) {
      int i = 0;
      for ( String str1 : sql ) {
         str1 = str1.toUpperCase();
         sql[i] = str1;
         i = i + 1;
      }
   }

   ////////////////////////////////////////////////////
   //
   // HTML Banner ...
   // 
   if (dbType.equals("oracle")) {
      vhgt="25";
   } else {
      vhgt="50";
   }
   String ban = "<center><table border=0 style=\"background-color:black;width:100%;\">\n";
   ban = ban + "<tr><td style=\"padding-left:100px;\" width=\"40%\" align=\"center\" valign=\"top\"><a href=\"redirect.jsp?sessionid="+sessionid+"&logout=yes\"><image src=\"img/delphix-logo-white.png\" border=0 /></a></td>\n";
   ban = ban + "<td align=\"center\" width=\"140\" valign=\"middle\"><image src=\"img/"+dbType+"_logo.png\" height=\""+vhgt+"\" border=0 /></td>\n";
   ban = ban + "<td align=\"left\" valign=\"center\"><span style=\"padding-left:10px;font-size:14pt;\"><font color=\"#1AD6F5\">Delphix Demo Application </font><font color=white>[ "+envtype+" : "+dbname+" ]</font></span></td>\n";
   ban = ban + "</tr>\n";
msg = "Hello <b>"+dbType+"</b>!";
   //if (msg != null) {
   //  ban = ban + "<tr style=\"background-color:white;width:100%;\"><td align=\"right\" style=\"color:blue;\"><i>:System Message:</i></td><td colspan=2>"+msg+"</td></tr>\n";
   //}
   ban = ban + "</table></center>\n";
   if (request.getParameter("banner") != null) {
      if (request.getParameter("banner").equals("no")) {
         ban = "";
      }
   }
   session.setAttribute("html_banner",ban);
   //
   // Source or Target Database Connection ...
   //
   if ( dataSource != null) ds="jdbc/"+dataSource;
   else msg = msg+"<br /><font color=\"red\">Missing dataSource ...</font>";
   session.setAttribute("dataSource",ds);

   //
   // Page Title ...
   // 
   String[] arr = dataSource.replace("_"," ").split(" ");
   StringBuffer sb = new StringBuffer();

   for (int i = 0; i < arr.length; i++) {
      sb.append(Character.toUpperCase(arr[i].charAt(0)))
        .append(arr[i].substring(1)).append(" ");
   }          
   sb.toString().trim(); 
   session.setAttribute("page_title",sb);

   //
   // Employee Page ...
   //
   session.setAttribute("sql_select_employees",sql[0]);

   //
   // Masking Page ...
   //
   session.setAttribute("sql_select_patient",sql[1]);
   session.setAttribute("sql_select_patientdetails",sql[2]);
   session.setAttribute("sql_select_medicalrecords",sql[3]);

   //
   // Delete Page ...
   //
   session.setAttribute("sql_delete_employee",sql[4]); 

   //
   // Insert Page ...
   //
   session.setAttribute("sql_insert_newemp",sql[5]);

} else {
   //
   // System Message ...
   //
   msg = "Error: Missing Parameters ...<br />";
   session.setAttribute("sysMessage",msg);
   pg = "index.jsp";
}

//
// Redirect URL ...
//
/*
out.println("database: "+sqlSchema+"<br />");
out.println("connUrl: "+connUrl+"<br />");
out.println ("dbType: "+dbType+"<br />");
out.println ("page: "+pg+"<br />");
*/
response.sendRedirect(pg+"?sessionid="+sessionid);


      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
