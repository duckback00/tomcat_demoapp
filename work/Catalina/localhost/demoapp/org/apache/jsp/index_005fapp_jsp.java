/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2020-02-04 17:40:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.sql.*;
import com.ibm.db2.jcc.*;
import oracle.jdbc.driver.*;
import oracle.jdbc.OracleDriver;
import java.util.*;
import javax.servlet.*;
import org.json.simple.*;
import org.json.simple.parser.*;
import java.net.*;

public final class index_005fapp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/include_page_calcs.jsp", Long.valueOf(1527219588000L));
    _jspx_dependants.put("/include_page_sort.jsp", Long.valueOf(1527219588000L));
    _jspx_dependants.put("/read_session.jsp", Long.valueOf(1527219588000L));
    _jspx_dependants.put("/include_page_html.jsp", Long.valueOf(1527219588000L));
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1527219588000L));
    _jspx_dependants.put("/init.jsp", Long.valueOf(1527219588000L));
    _jspx_dependants.put("/write_session.jsp", Long.valueOf(1527219588000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"ShowError.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');

String sessionid = "";
if (request.getParameter("sessionid") == null) {
   //session.invalidate();
   sessionid = UUID.randomUUID().toString();
} else {
   sessionid = (String) request.getParameter("sessionid");
}
String uri = request.getRequestURI();
String pageName = uri.substring(uri.lastIndexOf("/")+1);
String cdsid = (String)session.getAttribute("cdsid");
//
// Application Pages ...
//
String marr[] = new String[3];
marr[0] = "index";
marr[1] = "index_app";
marr[2] = "masking_app";
//
// Rows per Page Selections ...
//
int arr[] = new int[10];
arr[0] = 5;
arr[1] = 10;
arr[2] = 20;
arr[3] = 25;
arr[4] = 50;
arr[5] = 100;
arr[6] = 200;
arr[7] = 500;
arr[8] = 1000;
arr[9] = 5000;
session.setAttribute("rows_per_page",arr);
int[] rows_per_page_arr = (int[])session.getAttribute("rows_per_page");

      out.write('\n');

//
// Application Variables ...
//
int icnt = 0;
int ipage = 0;
int itotal = 0;
String isearch = "";
String sortname = "";
String sortdirection = "";
String ifilter = "";
String json_default = "{ \"session_name\": \"default\" ,\"cdsid\": \"ezstore\" ,\"pages\": { \"index.jsp\": { \"icnt\": 5 , \"ipage\": 1 , \"itotal\": 0 , \"sortname\": \"\" , \"sortdirection\": \"\" , \"isearch\": \"\" , \"ifilter\": {\"\": \"\"} } , \"index_app.jsp\": { \"icnt\": 10 , \"ipage\": 1 , \"itotal\": 0 , \"sortname\": \"\" , \"sortdirection\": \"ASC\" , \"isearch\": \"\" , \"ifilter\": {\"\": \"\"} } , \"masking_app.jsp\": { \"icnt\": 10 , \"ipage\": 1 , \"itotal\": 0 , \"sortname\": \"\" , \"sortdirection\": \"ASC\" , \"isearch\": \"\" , \"ifilter\": {\"\": \"\"} } } } ";

//out.println("sessionid: "+sessionid+" cdsid: "+cdsid+" pageName:"+pageName+"<br />");

//
// Session File Information ...
//
String path = "";
String webRootPath = application.getRealPath("/").replace('\\', '/');
// ... or ... webRootPath = getServletContext().getRealPath("/").replace('\\', '/');
//out.println("Path "+webRootPath+"<br />");

path = webRootPath+File.separator+"META-INF"+File.separator;

String sessionFilename = path+"session_"+cdsid+"_"+sessionid+".json";
String defaultFilename = path+"session_"+cdsid+"_default.json";
String masterFilename = path+"session_demoapp_default.json";

//out.println("fn: "+masterFilename+"<br />");

File sessionFile = new File(sessionFilename);
File defaultFile = new File(defaultFilename);
File masterFile = new File(masterFilename);

//
// Check for a new User/File ...
//
if ( !masterFile.exists() ) {
   try {
     PrintWriter sout = new PrintWriter(masterFilename);
     sout.println( json_default );
     sout.close();
   } catch (Exception e) {
      e.printStackTrace();
   }
}
//
// Check for a new User/File ...
//
if ( !sessionFile.exists() ) {
   if ( !defaultFile.exists() ) {
      try {
         FileInputStream fileInputStream = new FileInputStream(masterFilename);
         FileOutputStream fileOutputStream = new FileOutputStream(defaultFilename);
         FileOutputStream fileOutputStream1 = new FileOutputStream(sessionFilename);
         int bufferSize;
         byte[] bufffer = new byte[512];
         while ((bufferSize = fileInputStream.read(bufffer)) > 0) {
            fileOutputStream.write(bufffer, 0, bufferSize);
            fileOutputStream1.write(bufffer, 0, bufferSize);

         }
         fileInputStream.close();
         fileOutputStream.close();
         fileOutputStream1.close();
      } catch (Exception e) {
         e.printStackTrace();
      }
   } else { 
      try {
         FileInputStream fileInputStream = new FileInputStream(defaultFile);
         FileOutputStream fileOutputStream = new FileOutputStream(sessionFile);
         int bufferSize;
         byte[] bufffer = new byte[512];
         while ((bufferSize = fileInputStream.read(bufffer)) > 0) {
            fileOutputStream.write(bufffer, 0, bufferSize);
         }
         fileInputStream.close();
         fileOutputStream.close();
      } catch (Exception e) {
         e.printStackTrace();
      } 
   }   
}

// out.println("sessionFilename: "+sessionFilename+"<br />");

//
// Read Session File JSON Data Parameters ...
//
try {

   JSONParser parser = new JSONParser();

   Object obj = parser.parse(new FileReader(sessionFilename));

   JSONObject jsonObject = (JSONObject) obj;

   /*
   for(Iterator iterator = jsonObject.keySet().iterator(); iterator.hasNext();) {
      String key = (String) iterator.next();
      out.println(key + "---" + jsonObject.get(key));
      out.println("<br />");
   }
   */

   // 
   // Get Session Name ...
   //
   String session_name = (String) jsonObject.get("session_name");
   //out.println("session_name: "+session_name+"<br />");
	  
   //
   // Process Pages ... 
   //
   JSONObject pobj = (JSONObject) jsonObject.get("pages");
   for(Iterator iterator = pobj.keySet().iterator(); iterator.hasNext();) {
      String key = (String) iterator.next();
      //out.println(key + " --- " + pobj.get(key) + "<br />");
      //
      // Get Current Page Data ...
      //
      if (key.equals(pageName)) {
         JSONObject pg = (JSONObject) pobj.get(pageName); 
/*********
         for (Iterator iterator3 = pg.keySet().iterator(); iterator3.hasNext();) {
            String key3 = (String) iterator3.next();
            out.println(key3 + " --- " + pg.get(key3) + "<br />");
         }
*********/
	 long lcnt = (Long) pg.get("icnt");
         icnt = (int)lcnt;
         long lpage = (Long) pg.get("ipage");
         ipage = (int)lpage;
         long ltotal = (Long) pg.get("itotal");
         itotal = (int)ltotal;
         isearch = (String) pg.get("isearch");
         sortname = (String) pg.get("sortname");
         sortdirection = (String) pg.get("sortdirection");

         JSONObject fobj = (JSONObject) pg.get("ifilter");
         for (Iterator iterator2 = fobj.keySet().iterator(); iterator2.hasNext();) {
            String key2 = (String) iterator2.next();
            //out.println(key2 + " --- " + fobj.get(key2));
            ifilter = ifilter+key2+":"+fobj.get(key2)+"::";
            //out.println("<br />");
         }

      }      // if key ...
   }         // for pobj iterator ...

   /* 
   out.println("icnt = "+String.valueOf(icnt)+" | ");
   out.println("ipage = "+String.valueOf(ipage)+" | ");
   out.println("itotal = "+String.valueOf(itotal)+" | ");
   out.println("isearch = "+isearch+" | ");
   out.println("sortname = "+sortname+" | ");
   out.println("sortdirection = "+sortdirection+" | ");
   out.println("ifilter = "+ifilter+"<br />");
   out.println("<hr />");
   */

} catch (Exception e) {
   out.println(e);
}   


      out.write('\r');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');

String str = "";
/*
int ipage = 0;
int icnt = 0;
int itotal = 0;
String isearch = "";
String sortname = "";
String sordirection = "";
String ifilter = "";
*/

//
// Get/Set Page Number ...
//
if (request.getParameter("ipage") != null) {
   String page_str = (String)request.getParameter("ipage");
   ipage=Integer.parseInt(page_str);
}
//
// If Prev Page is less than 0 ...
//
if (ipage <= 0) {
   ipage = 1;
}

//
// Get/Set Number of Records Per Page value ...
//
if (request.getParameter("icnt") != null) {
   String icnt_str=(String)request.getParameter("icnt");
   icnt=Integer.parseInt(icnt_str);
}
if (itotal == 0) {
   // out.println("oops fetching itotal count <br />");   
   String tsql = "select count(*) as CNT from employees";

      out.write('\n');
      //  sql:query
      org.apache.taglibs.standard.tag.rt.sql.QueryTag _jspx_th_sql_005fquery_005f0 = (org.apache.taglibs.standard.tag.rt.sql.QueryTag) _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.QueryTag.class);
      _jspx_th_sql_005fquery_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sql_005fquery_005f0.setParent(null);
      // /include_page_calcs.jsp(38,0) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sql_005fquery_005f0.setVar("result");
      // /include_page_calcs.jsp(38,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sql_005fquery_005f0.setDataSource(session.getAttribute("dataSource"));
      int[] _jspx_push_body_count_sql_005fquery_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_sql_005fquery_005f0 = _jspx_th_sql_005fquery_005f0.doStartTag();
        if (_jspx_eval_sql_005fquery_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_sql_005fquery_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.pushBody();
            _jspx_push_body_count_sql_005fquery_005f0[0]++;
            _jspx_th_sql_005fquery_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
            _jspx_th_sql_005fquery_005f0.doInitBody();
          }
          do {
            out.write('\n');
            out.print(tsql);
            out.write('\n');
            int evalDoAfterBody = _jspx_th_sql_005fquery_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_sql_005fquery_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
            _jspx_push_body_count_sql_005fquery_005f0[0]--;
          }
        }
        if (_jspx_th_sql_005fquery_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_sql_005fquery_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_sql_005fquery_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_sql_005fquery_005f0.doFinally();
        _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fquery_005f0);
      }
      out.write('\n');
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /include_page_calcs.jsp(41,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("row");
      // /include_page_calcs.jsp(41,0) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${result.rows}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write(" \n");
            out.write("   <!-- c:out value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${row.CNT}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
            out.write("\"/ -->\n");
            out.write("   ");
            if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return;
            out.write('\n');

   itotal = Integer.parseInt(pageContext.getAttribute("myValue").toString());

            out.write('\n');
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
        _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      }
      out.write('\n');

   // out.println("itotal count: "+itotal+" <br />");
}

//
// Number of Pages Calculation ...
//
int noPages = 1;
if (itotal > 0) {
   noPages = (itotal / icnt) + 1;
   if (ipage > noPages) {
      ipage = noPages;
   }
   if ( (itotal * 1.0 / icnt) == (itotal/icnt) ) {
      noPages = noPages - 1;
   }
}
//
// If Next Page is greater than Number of Pages ...
//
if (ipage > noPages) {
   ipage = noPages;
}

//
// Start and End Records to Fetch ...
//
int istart = ((ipage - 1) * icnt) + 1;
int iend = istart + icnt - 1;
if (iend > itotal) {
   iend = itotal;
}

//
// Get/Set Sort Parameters ...
//
String sorder = " order by ";
if (request.getParameter("sortname") != null) {
   sortname = (String)request.getParameter("sortname");
}
if (request.getParameter("sortdirection") != null) {
   sortdirection = (String)request.getParameter("sortdirection");
}
if (sortname == null || sortname.equals("")) {
   sorder = "";
   sortdirection = "";
}

//
// Get/Set Search Parameters ...
//
if (request.getParameter("find_value") != null) {
   isearch = (String)request.getParameter("find_value");
}


      out.write('\n');
      out.write('\n');
      out.write('\n');

String sql = "";
session.setAttribute("employee_id","NO");
if (session.getAttribute("dbType").equals("oracle")) {
   sql = "select c.* from (";
   sql = sql + "select a.*, count(*) over () as CNT from (";
   sql = sql + "select b.*, rownum as RNUM from (";
   sql = sql + "select * from employees" + sorder + " " + sortname + " " + sortdirection;
   sql = sql + ") b";
   sql = sql + ") a";
   sql = sql + ") c";
   sql = sql + " where rnum between " + istart + " and " + iend + "";
   if (isearch != null && !isearch.equals("")) {
      isearch = isearch.toLowerCase();
      sql = "select c.* from (";
      sql = sql + "select a.*, count(*) over () as cnt from (";
      sql = sql + "select b.*, rownum as rnum from (";
      sql = sql + "select * from employees";
      sql = sql + " WHERE lower(first_name) like '%"+isearch+"%'";
      sql = sql + " OR lower(last_name) like '%"+isearch+"%'";
      sql = sql + " OR lower(dept_name) like '%"+isearch+"%'";
      sql = sql + " OR lower(city) like '%"+isearch+"%'";
      sql = sql + sorder + " " + sortname + " " + sortdirection;
      sql = sql + ") b";
      sql = sql + ") a";
      sql = sql + ") c";
      sql = sql + " where rnum between " + istart + " and " + iend + "";
   }
} else if (session.getAttribute("dbType").equals("mssql")) {
   //select [EMPLOYEE_ID] ,[FIRST_NAME] ,[LAST_NAME] ,[DEPT_NAME] ,[CITY] , ROW_NUMBER() OVER(ORDER BY EMPLOYEE_ID ASC) AS RNUM , COUNT(*) OVER () as ICNT from EMPLOYEES
   sql = "select c.* from (";
   sql = sql + "select * ";
   if (sorder.equals("")) {
      sql = sql + ", ROW_NUMBER() OVER(ORDER BY EMPLOYEE_ID ASC) AS RNUM, COUNT(*) OVER () as CNT ";
   } else {
      sql = sql + ", ROW_NUMBER() OVER(ORDER BY "+sortname+" "+sortdirection+") AS RNUM, COUNT(*) OVER () as CNT ";
   }
   sql = sql + " from EMPLOYEES ";
//   sql = sql + sorder + " " + sortname + " " + sortdirection;
   sql = sql + ") c";
   sql = sql + " where RNUM between " + istart + " and " + iend + "";
   if (isearch != null && !isearch.equals("")) {
      isearch = isearch.toLowerCase();
      sql = "select c.* from (";
      sql = sql + "select * ";
      if (sorder.equals("")) {
         sql = sql + ", ROW_NUMBER() OVER(ORDER BY EMPLOYEE_ID ASC) AS RNUM, COUNT(*) OVER () as CNT ";
      } else {
         sql = sql + ", ROW_NUMBER() OVER(ORDER BY "+sortname+" "+sortdirection+") AS RNUM, COUNT(*) OVER () as CNT ";
      }
      sql = sql + " from employees";
      sql = sql + " WHERE lower(first_name) like '%"+isearch+"%'";
      sql = sql + " OR lower(last_name) like '%"+isearch+"%'";
      sql = sql + " OR lower(dept_name) like '%"+isearch+"%'";
      sql = sql + " OR lower(city) like '%"+isearch+"%'";
//      sql = sql + sorder + " " + sortname + " " + sortdirection;
      sql = sql + ") c";
      sql = sql + " where RNUM between " + istart + " and " + iend + "";
   }
} else if (session.getAttribute("dbType").equals("mysql")) {
   sql = (String) session.getAttribute("sql_select_employees");
   //istart = istart - 1;
   //sql = "select * from employees limit " + istart + "," + icnt; // + " "+itotal+" "+noPages;
} else {
   sql = (String) session.getAttribute("sql_select_employees"); 
}

if (session.getAttribute("dbType").equals("db2")) {
   sql = "select * from delphixdb.employees";
}
// out.println("SQL> "+sql+"<br />");

      out.write('\n');
      out.write('\n');
      //  sql:query
      org.apache.taglibs.standard.tag.rt.sql.QueryTag _jspx_th_sql_005fquery_005f1 = (org.apache.taglibs.standard.tag.rt.sql.QueryTag) _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.QueryTag.class);
      _jspx_th_sql_005fquery_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sql_005fquery_005f1.setParent(null);
      // /index_app.jsp(92,0) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sql_005fquery_005f1.setVar("employees");
      // /index_app.jsp(92,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sql_005fquery_005f1.setDataSource(session.getAttribute("dataSource"));
      int[] _jspx_push_body_count_sql_005fquery_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_sql_005fquery_005f1 = _jspx_th_sql_005fquery_005f1.doStartTag();
        if (_jspx_eval_sql_005fquery_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_sql_005fquery_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.pushBody();
            _jspx_push_body_count_sql_005fquery_005f1[0]++;
            _jspx_th_sql_005fquery_005f1.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
            _jspx_th_sql_005fquery_005f1.doInitBody();
          }
          do {
            out.write('\n');
            out.print(sql);
            out.write('\n');
            int evalDoAfterBody = _jspx_th_sql_005fquery_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_sql_005fquery_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
            _jspx_push_body_count_sql_005fquery_005f1[0]--;
          }
        }
        if (_jspx_th_sql_005fquery_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_sql_005fquery_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_sql_005fquery_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_sql_005fquery_005f1.doFinally();
        _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fquery_005f1);
      }
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        ");
      out.write("\n");
      out.write("        <link href=\"./bootstrap/css/bootstrap1.min.css\" rel=\"stylesheet\" media=\"screen\"/>\n");
      out.write("        <title>");
      out.print(session.getAttribute("page_title"));
      out.write("</title>\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            body {\n");
      out.write("                padding-top: 20px;\n");
      out.write("                padding-bottom: 20px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            /* Custom container */\n");
      out.write("            .container {\n");
      out.write("                margin: 0 auto;\n");
      out.write("                max-width: 1000px;\n");
      out.write("            }\n");
      out.write("            .container > hr {\n");
      out.write("                margin: 60px 0;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            /* Main marketing message and sign up button */\n");
      out.write("            .jumbotron {\n");
      out.write("                margin: 80px 0;\n");
      out.write("                text-align: center;\n");
      out.write("            }\n");
      out.write("            .jumbotron h1 {\n");
      out.write("                font-size: 100px;\n");
      out.write("                line-height: 1;\n");
      out.write("            }\n");
      out.write("            .jumbotron .lead {\n");
      out.write("                font-size: 24px;\n");
      out.write("                line-height: 1.25;\n");
      out.write("            }\n");
      out.write("            .jumbotron .btn {\n");
      out.write("                font-size: 21px;\n");
      out.write("                padding: 14px 24px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            /* Supporting marketing content */\n");
      out.write("            .marketing {\n");
      out.write("                margin: 60px 0;\n");
      out.write("            }\n");
      out.write("            .marketing p + h4 {\n");
      out.write("                margin-top: 28px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            /* Customize the navbar links to be fill the entire space of the .navbar */ \n");
      out.write("            .navbar .navbar-inner {\n");
      out.write("                padding: 0;\n");
      out.write("            }\n");
      out.write("            .navbar .nav {\n");
      out.write("                margin: 0;\n");
      out.write("                display: table;\n");
      out.write("                width: 100%;\n");
      out.write("            }\n");
      out.write("            .navbar .nav li {\n");
      out.write("                display: table-cell;\n");
      out.write("                width: 0%;\n");
      out.write("                float: none;\n");
      out.write("            }\n");
      out.write("            .navbar .nav li a {\n");
      out.write("                font-weight: bold;\n");
      out.write("                text-align: center;\n");
      out.write("                border-left: 1px solid rgba(255,255,255,.75);\n");
      out.write("                border-right: 1px solid rgba(0,0,0,.1);\n");
      out.write("            }\n");
      out.write("            .navbar .nav li:first-child a {\n");
      out.write("                border-left: 0;\n");
      out.write("                border-radius: 3px 0 0 3px;\n");
      out.write("            }\n");
      out.write("            .navbar .nav li:last-child a {\n");
      out.write("                border-right: 0;\n");
      out.write("                border-radius: 0 3px 3px 0;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("        </style>\n");
      out.write("        <link href=\"./bootstrap/css/bootstrap-responsive.min.css\" rel=\"stylesheet\" media=\"screen\"/>\n");
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("\n");
      out.write("    <a name=\"top\"></a>\n");
      out.write("    ");
      out.print(session.getAttribute("html_banner"));
      out.write("\n");
      out.write("\n");
      out.write("        <script>\n");
      out.write("            function validateInput()\n");
      out.write("            {\n");
      out.write("                var empid = document.getElementById(\"empid\").value;\n");
      out.write("                var firstname = document.getElementById(\"firstname\").value;\n");
      out.write("                var lastname = document.getElementById(\"lastname\").value;\n");
      out.write("                var deptname = document.getElementById(\"deptname\").value;\n");
      out.write("                var city = document.getElementById(\"city\").value;\n");
      out.write("                \n");
      out.write("                if (empid == \"\" || firstname == \"\" || lastname == \"\" || deptname == \"\" || city == \"\")\n");
      out.write("                {\n");
      out.write("                    bootbox.alert(\"One or more input fields are empty!\");\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("            }            \n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div class=\"span10\">\n");
      out.write("                    <div class=\"masthead\">\n");
      out.write("                        <h3 class=\"muted\">Delphix Demo</h3>\n");
      out.write("                        <div class=\"navbar\">\n");
      out.write("                            <div class=\"navbar-inner\">\n");
      out.write("                                <div class=\"container\">\n");
      out.write("                                    <ul class=\"nav\">\n");
      out.write("                                        <li class=\"active\"><a href=\"index_app.jsp?sessionid=");
      out.print(sessionid);
      out.write("\">&nbsp;&nbsp;&nbsp;Employees&nbsp;&nbsp;&nbsp;</a></li>\n");
      out.write("                                        <li><a href=\"masking_app.jsp?sessionid=");
      out.print(sessionid);
      out.write("\">Medical Records</a><li> \n");
      out.write("                                        <!-- li><a href=\"login.jsp?sessionid=");
      out.print(sessionid);
      out.write("&platform=Virtualization\">API Demo</a></li -->\n");
      out.write("                                    </ul>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div><!-- /.navbar -->\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"span2\">\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class='container'>\n");
      out.write("\n");
      out.write("\n");
      out.write("<table border=0 width=\"100%\" style=\"border-collapse:collapse;\"><tr>\n");
      out.write("<td style=\"width:140px;\"><h4>Employees</h4></td>\n");

if ( session.getAttribute("dbType").equals("oracle") || session.getAttribute("dbType").equals("mssql") ) {

      out.write("\n");
      out.write("   ");
      out.write("<!-- Paging -->\n");
      out.write("<form name=\"form_first\" method=\"POST\">\n");
      out.write("<td style=\"text-align:center;width:20px;\">\n");
      out.write("   <input type=hidden name=\"ipage\" value=\"1\" />\n");
      out.write("   <input type=submit value=\"First\" />\n");
      out.write("</td>\n");
      out.write("</form>\n");
      out.write("<form name=\"form_prev\" method=\"POST\">\n");
      out.write("<td style=\"text-align:center;width:20px;\">\n");
      out.write("   <input type=hidden name=\"ipage\" value=\"");
      out.print(ipage-1);
      out.write("\" />\n");
      out.write("   <input type=submit value=\"Prev\" />\n");
      out.write("</td>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<form name=\"form_sel\" method=\"POST\">\n");
      out.write("<td style=\"text-align:center;padding-top:12px;width:60px;\">\n");

if ( noPages < 100 ) {

      out.write("\n");
      out.write("  <select name=ipage style=\"height:26px;line-height:26px;width:60px;position:relative;top:0px;\" onchange=\"document.form_sel.submit();\">\n");

for(int i = 1; i <= noPages; i+=1) {
 if (i == ipage) {

      out.write("\n");
      out.write("  <option value=");
      out.print(i);
      out.write(" selected >");
      out.print(i);
      out.write("</option>\n");

 } else {

      out.write("\n");
      out.write("  <option value=");
      out.print(i);
      out.write('>');
      out.print(i);
      out.write("</option>\n");

 }
}

} else {

      out.write("\n");
      out.write("  <input type=\"text\" name=\"ipage\" value=\"");
      out.print(ipage);
      out.write("\" size=\"7\" style=\"height:24px;line-height:24px;width:60px;font-size:9pt;position:relative;top:0px;\" onchange=\"document.form_sel.submit();\" />\n");

}

      out.write("\n");
      out.write("  </select>\n");
      out.write("</td>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<form name=\"form_next\" method=\"POST\">\n");
      out.write("<td style=\"text-align:center;width:20px;\">\n");
      out.write("   <input type=hidden name=\"ipage\" value=\"");
      out.print(ipage+1);
      out.write("\" />\n");
      out.write("   <input type=submit value=\"Next\" />\n");
      out.write("</td>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<form name=\"form_last\" method=\"POST\">\n");
      out.write("<td style=\"text-align:center;width:20px;\">\n");
      out.write("   <input type=hidden name=\"ipage\" value=\"");
      out.print(noPages);
      out.write("\" />\n");
      out.write("   <input type=submit value=\"Last\" />\n");
      out.write("</td>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<!-- Rows Per Page -->\n");
      out.write("<form name=\"form_icnt\" method=\"POST\">\n");
      out.write("<td style=\"text-align:right;font-size:9pt;width:90px;\">\n");
      out.write("Rows/Page: &nbsp;\n");
      out.write("</td>\n");
      out.write("<td style=\"text-align:left;font-size:9pt;width:80px;padding-top:12px;\">\n");
      out.write("<select name=icnt style=\"height:26px;line-height:26px;width:60px;position:relative;top:0px;\" onchange=\"document.form_icnt.submit();\">\n");

for (int i = 0; i < rows_per_page_arr.length; i++) {

      out.write("\n");
      out.write("   <option value=\"");
      out.print(rows_per_page_arr[i]);
      out.write('"');
      out.write('\n');

if (icnt == rows_per_page_arr[i]) {

      out.write("\n");
      out.write(" selected\n");

}

      out.write('\n');
      out.write('>');
      out.print(rows_per_page_arr[i]);
      out.write("</option>\n");

}   // end for

      out.write("\n");
      out.write("</select>\n");
      out.write("</td>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- Search Table -->\n");
      out.write("<form name=\"form_find\" method=\"POST\">\n");
      out.write("<td style=\"text-align:right;font-size:9pt;width:60px;\">\n");
      out.write("Search: \n");
      out.write("</td>\n");
      out.write("<td style=\"padding-top:12px;text-align:left;font-size:9pt;width:140px;\">\n");
      out.write("<input style=\"size:12px;line-height:12px;height:12px;\" type=\"text\" name=\"find_value\" size=\"8\" value=\"");
      out.print(isearch);
      out.write("\" />\n");
      out.write("<image height=\"20\" src=\"images/search_128.png\" onclick=\"document.form_find.submit();\" />\n");
      out.write("</td>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<td style=\"text-align:left;font-size:11px;color:blue;\">Rows ");
      out.print(istart);
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print(iend);
      out.write(" of ");
      out.print(itotal);
      out.write("</td>\n");
      out.write("\n");
      out.write('\n');

}

//<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
//<td align="right"><a href="#top"><image src="images/back2top-icon-2.gif" height="30px" border=0 alt="Back to Top" /></a></td>

      out.write("\n");
      out.write("</tr></table>\n");
      out.write("\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div class=\"span10\">\n");
      out.write("\n");
      out.write("                    <table id=\"\" class=\"table table-striped\">\n");
      out.write("                        <!-- column headers -->\n");
      out.write("                        <tr>\n");
      out.write("                            ");
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /index_app.jsp(249,28) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("columnName");
      // /index_app.jsp(249,28) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${employees.columnNames}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write('\n');
            if (_jspx_meth_c_005fset_005f1(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return;
            out.write('\n');

String name=pageContext.getAttribute("myTest").toString();
if (name.equals("EMPLOYEE_ID")) {
   session.setAttribute("employee_id","YES");
}
// out.println("empid "+session.getAttribute("employee_id")+"<br />");

            out.write('\n');

if ( session.getAttribute("dbType").equals("oracle") || session.getAttribute("dbType").equals("mssql") ) {

            out.write('\n');
            out.write(' ');
            out.write(' ');



         if (!name.equals("CNT") && !name.equals("RNUM")) {

            out.println("<th align=\"center\" style=\"\">");

            String tmpname = name;
            String tmpasc = "images/sort_asc_disabled.png";
            String tmpdesc = "images/sort_desc_disabled.png";
            if (sortname.equals(name)) {
               tmpname = "<font color=red>"+name.replace("_"," ")+"</font>";
               if (sortdirection.equals("ASC")) {
                 tmpasc = "images/sort_asc.png";
               } else {
                 tmpdesc = "images/sort_desc.png";
               }
            }
//            String sasc = "<a href=\"?sortdirection=ASC&sortname="+name+"\"><image src=\""+tmpasc+"\" border=\"\" alt=\"&nbsp;\" /></a>";
//            String sdesc = "<a href=\"?sortdirection=DESC&sortname="+name+"\"><image src=\""+tmpdesc+"\" border=\"\" alt=\"&nbsp;\" /></a>";

            String sasc = "<image src=\""+tmpasc+"\" border=\"\" alt=\"&nbsp;\" onclick=\"document.forma_"+name+".submit();\" />";
            String sdesc = "<image src=\""+tmpdesc+"\" border=\"\" alt=\"&nbsp;\" onclick=\"document.formd_"+name+".submit();\" />";

            out.println("<table border=0 id=\"\" style=\"border-collapse:collapse;font-size:9pt;height:16px;\">");
out.println("<form name=\"forma_"+name+"\" method=\"POST\">");
out.println("<input type=\"hidden\" name=\"sortdirection\" value=\"ASC\" />");
out.println("<input type=\"hidden\" name=\"sortname\" value=\""+name+"\" />");
            out.println("<tr>");
            out.println("<th rowspan=2>"+tmpname.replace("_"," ")+"</th>");
            out.println("<td valign=top align=center style=\"height:8px;line-height:8px;\">"+sasc+"</td>");
            out.println("</tr>");
out.println("</form>");
out.println("<form name=\"formd_"+name+"\" method=\"POST\">");
out.println("<input type=\"hidden\" name=\"sortdirection\" value=\"DESC\" />");
out.println("<input type=\"hidden\" name=\"sortname\" value=\""+name+"\" />");
            out.println("<tr>");
            out.println("<td valign=top align=center style=\"height:8px;line-height:8px;\">"+sdesc+"</td>");
            out.println("</tr>");
out.println("</form>");
            out.println("</table>");

            out.println("</th>");
         }

            out.write('\n');
            out.write('\n');

}

            out.write("\n");
            out.write("                                ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
        _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      }
      out.write("\n");
      out.write("                        </tr>\n");
      out.write("                        <!-- column data -->\n");
      out.write("                        ");
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /index_app.jsp(268,24) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("row");
      // /index_app.jsp(268,24) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${employees.rows}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                            <tr>\n");
            out.write("                                ");
            //  c:forEach
            org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f3 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
            _jspx_th_c_005fforEach_005f3.setPageContext(_jspx_page_context);
            _jspx_th_c_005fforEach_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f2);
            // /index_app.jsp(270,32) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fforEach_005f3.setVar("columnName");
            // /index_app.jsp(270,32) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fforEach_005f3.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${employees.columnNames}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
            int[] _jspx_push_body_count_c_005fforEach_005f3 = new int[] { 0 };
            try {
              int _jspx_eval_c_005fforEach_005f3 = _jspx_th_c_005fforEach_005f3.doStartTag();
              if (_jspx_eval_c_005fforEach_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\n");
                  out.write("                                    ");
                  if (_jspx_meth_c_005fset_005f2(_jspx_th_c_005fforEach_005f3, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f3))
                    return;
                  out.write("\n");
                  out.write("                                    ");
                  if (_jspx_meth_c_005fset_005f3(_jspx_th_c_005fforEach_005f3, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f3))
                    return;
                  out.write("\n");
                  out.write("\n");
                  out.write("                                    ");

                                    String ztmp = "";
                                    
                  out.write("\n");
                  out.write("                                    ");
                  //  c:choose
                  org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
                  _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
                  _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f3);
                  int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
                  if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                    do {
                      out.write(" \n");
                      out.write("                                       ");
                      //  c:when
                      org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
                      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
                      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
                      // /index_app.jsp(278,39) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty myVal}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
                      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
                      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        do {
                          out.write("\n");
                          out.write("                                       ");

                                       String strStr=pageContext.getAttribute("myTest").toString();
                                       String strVal = pageContext.getAttribute("myVal").toString();
                                       ztmp = strVal;
                                       if (strStr.equals("CNT")) {
                                          // out.println("yeah"+strVal+":");
                                          itotal = Integer.parseInt(strVal);
                                       }
                                       if ( !strStr.equals("RNUM") && !strStr.equals("CNT") ) {
                                          if (isearch != null && !isearch.equals("") ) {
                                             if (ztmp != null) {
                                                if (ztmp.toLowerCase().contains(isearch)) {
                                                   ztmp = "<font color=red>"+ztmp+"</font>";
                                                }
                                             }
                                          }
                                          //${row[columnName]}
                                          
                          out.write("\n");
                          out.write("                                          <td>");
                          //  c:out
                          org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
                          _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
                          _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
                          // /index_app.jsp(297,46) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_c_005fout_005f0.setValue(ztmp);
                          // /index_app.jsp(297,46) name = escapeXml type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_c_005fout_005f0.setEscapeXml(false);
                          int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
                          if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                            _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.reuse(_jspx_th_c_005fout_005f0);
                            return;
                          }
                          _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.reuse(_jspx_th_c_005fout_005f0);
                          out.write("</td>\n");
                          out.write("                                          ");

                                       }
                                       
                          out.write("\n");
                          out.write("                                       ");
                          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                      }
                      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
                        return;
                      }
                      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
                      out.write("\n");
                      out.write("                                       ");
                      //  c:otherwise
                      org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
                      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
                      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
                      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
                      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        do {
                          out.write("\n");
                          out.write("                                          <td>");
                          //  c:out
                          org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
                          _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
                          _jspx_th_c_005fout_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
                          // /index_app.jsp(303,46) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_c_005fout_005f1.setValue(ztmp);
                          // /index_app.jsp(303,46) name = escapeXml type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_c_005fout_005f1.setEscapeXml(false);
                          int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
                          if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                            _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.reuse(_jspx_th_c_005fout_005f1);
                            return;
                          }
                          _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.reuse(_jspx_th_c_005fout_005f1);
                          out.write("</td>\n");
                          out.write("                                       ");
                          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                      }
                      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
                        return;
                      }
                      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
                      out.write("\n");
                      out.write("                                    ");
                      int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
                      if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                        break;
                    } while (true);
                  }
                  if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
                    return;
                  }
                  _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
                  out.write("\n");
                  out.write("\n");
                  out.write("                                ");
                  int evalDoAfterBody = _jspx_th_c_005fforEach_005f3.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fforEach_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
            } catch (java.lang.Throwable _jspx_exception) {
              while (_jspx_push_body_count_c_005fforEach_005f3[0]-- > 0)
                out = _jspx_page_context.popBody();
              _jspx_th_c_005fforEach_005f3.doCatch(_jspx_exception);
            } finally {
              _jspx_th_c_005fforEach_005f3.doFinally();
              _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f3);
            }
            out.write("\n");
            out.write("                            </tr>\n");
            out.write("                        ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
        _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f2);
      }
      out.write("\n");
      out.write("\n");
      out.write("                    </table>\n");
      out.write("                    <br/>\n");
      out.write("                    <br/>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"span2\">\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div class=\"span5\">\n");
      out.write("                    <form class=\"form-horizontal\" onsubmit=\"return validateInput()\" action=\"insertdb_app.jsp?sessionid=");
      out.print(sessionid);
      out.write("\" method=\"POST\">\n");
      out.write("                        <fieldset>\n");
      out.write("                            <legend> Add Employee </legend>\n");
 
if ( session.getAttribute("employee_id").equals("YES") ) {

      out.write("\n");
      out.write("                            <div class=\"control-group\">\n");
      out.write("                                <label class=\"control-label\" for=\"empid\">Employee ID</label>\n");
      out.write("                                <div class=\"controls\">\n");
      out.write("                                    <input type=\"text\" name=\"empid\" id=\"empid\" placeholder=\"empid\">\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");

} else { 

      out.write("\n");
      out.write("<input type=\"hidden\" name=\"empid\" id=\"empid\" placeholder=\"empid\" value=\"NA\" />\n");

}

      out.write("\n");
      out.write("                            <div class=\"control-group\">\n");
      out.write("                                <label class=\"control-label\" for=\"firstname\">First Name</label>\n");
      out.write("                                <div class=\"controls\">\n");
      out.write("                                    <input type=\"text\" name=\"firstname\" id=\"firstname\" placeholder=\"firstname\">\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"control-group\">\n");
      out.write("                                <label class=\"control-label\" for=\"lastname\">Last Name</label>\n");
      out.write("                                <div class=\"controls\">\n");
      out.write("                                    <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder=\"lastname\">\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"control-group\">\n");
      out.write("                                <label class=\"control-label\" for=\"deptname\">Dept Name</label>\n");
      out.write("                                <div class=\"controls\">\n");
      out.write("                                    <input type=\"text\" name=\"deptname\" id=\"deptname\" placeholder=\"dept\">\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"control-group\">\n");
      out.write("                                <label class=\"control-label\" for=\"city\">City</label>\n");
      out.write("                                <div class=\"controls\">\n");
      out.write("                                    <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"city\">\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"control-group\">\n");
      out.write("                                <div class=\"controls\">\n");
      out.write("                                    <button type=\"submit\" class=\"btn btn-inverse\">Add</button>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </fieldset>\n");
      out.write("                    </form>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"span5\">\n");
      out.write("                    <form class=\"form-horizontal\"action=\"deletedb_app.jsp?sessionid=");
      out.print(sessionid);
      out.write("\" method=\"POST\">                                               \n");
      out.write("                        <fieldset>\n");
      out.write("                            <legend> Remove Employee </legend>\n");
      out.write("                            <div class=\"control-group\">\n");
 
if ( session.getAttribute("employee_id").equals("YES") ) {

      out.write("\n");
      out.write("                                <label class=\"control-label\" for=\"empid\">Employee ID</label>\n");
      out.write("                                <div class=\"controls\">\n");
      out.write("                                    <input type=\"text\" name=\"empid\" placeholder=\"empid\">\n");
      out.write("                                </div>\n");

} else {

      out.write("\n");
      out.write("                                <label class=\"control-label\" for=\"firstname\">First Name</label>\n");
      out.write("                                <div class=\"controls\">\n");
      out.write("                                    <input type=\"text\" name=\"firstname\" placeholder=\"firstname\">\n");
      out.write("                                </div>\n");

}

      out.write("\n");
      out.write("                            </div> \n");
      out.write("                            <div class=\"control-group\">\n");
      out.write("                                <div class=\"controls\">\n");
      out.write("                                    <button type=\"submit\" class=\"btn btn-inverse\">Delete</button>\n");
      out.write("                                </div>\n");
      out.write("                            </div>                      \n");
      out.write("                        </fieldset>                       \n");
      out.write("                    </form>\n");
      out.write("                    <br/>\n");
      out.write("                    <br/> \n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("<!--\n");
      out.write("        <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\"></script>\n");
      out.write("        <script src=\"http://code.jquery.com/jquery.js\"></script>  \n");
      out.write("-->\n");
      out.write("        <script src=\"./bootstrap/js/bootstrap.min.js\"></script>  \n");
      out.write("        <script src=\"./bootstrap/js/bootbox.min.js\"></script>\n");
      out.write("\n");

out.println("employee_id "+session.getAttribute("employee_id")+"<br />");
out.println("dbType "+session.getAttribute("dbType")+"<br />");

      out.write('\n');
      out.write('\n');


      out.write('\n');


//out.println("<hr />sessionid: "+sessionid+" cdsid: "+cdsid+" pageName:"+pageName+"<br />");


//
// Session File Information ...
//
// -- see read_session.jsp for paths and filenames ...

//out.println("filename: "+sessionFilename+"<br />");
//
// Read Session File JSON Data Parameters ...
//
try {

   JSONParser parser = new JSONParser();

   Object obj = parser.parse(new FileReader(sessionFilename));

   JSONObject jsonObject = (JSONObject) obj;

   String session_name = (String) jsonObject.get("session_name");
   //out.println("session_name: "+session_name+"<br />");
   //if (!session_name.equals(sessionid)) {
   //   out.println("session missmatch ...<br />");
   //}
   
   //  
   // Pages ...
   // 
   JSONObject pobj = (JSONObject) jsonObject.get("pages");

   // 
   // Check for any diffs ...
   //
   if (  1 != 0 ) {

      //out.println("Updating Session File ...<br />");
      //out.println("itotal: "+itotal+"<br />");

      JSONObject filterObj = new JSONObject();
      filterObj.put("","");
 
      JSONObject newObj = new JSONObject();
      newObj.put("icnt", icnt);
      newObj.put("ipage", ipage);
      newObj.put("itotal", itotal);
      newObj.put("isearch", isearch);
      newObj.put("sortname", sortname);
      newObj.put("sortdirection", sortdirection);
      newObj.put("ifilter", filterObj);

      JSONObject wobj = new JSONObject();
      wobj.put("session_name", sessionid);
      wobj.put("cdsid", cdsid);

      JSONObject pages_obj = new JSONObject();
//out.println("ln "+marr.length+"<br />");
      for (int i = 0; i < marr.length; i++) {
         String mtmp = marr[i].toLowerCase().replace(" ","").replace("-","") + ".jsp";
//out.println(mtmp+" "+pageName+"<br />");
         if (mtmp.equals(pageName)) {
            //out.println(mtmp+"<br />");
            pages_obj.put(pageName, (JSONObject) newObj );
         } else {
            if ( (JSONObject)pobj.get(mtmp) != null ) {
               pages_obj.put(mtmp, (JSONObject) pobj.get(mtmp));
            } else {
               pages_obj.put(mtmp, (JSONObject) pobj.get(mtmp));
            }
         }
      }   // end for

      wobj.put("pages", pages_obj);

      FileWriter file = new FileWriter(sessionFilename);
      file.write(wobj.toJSONString());
      file.flush();
      file.close();

      //out.print(wobj); 

   }
   
} catch (Exception e) {
   out.println(e);
}   


      out.write('\r');
      out.write('\n');
      out.write("\n");
      out.write("</BODY>\n");
      out.write("</HTML>\n");
      out.write('\n');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /include_page_calcs.jsp(43,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("myValue");
    // /include_page_calcs.jsp(43,3) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${row.CNT}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
    // /index_app.jsp(250,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setVar("myTest");
    // /index_app.jsp(250,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${columnName}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
    if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f3, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f3)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f3);
    // /index_app.jsp(271,36) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f2.setVar("myTest");
    // /index_app.jsp(271,36) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${columnName}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
    if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f3, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f3)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f3 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f3);
    // /index_app.jsp(272,36) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f3.setVar("myVal");
    // /index_app.jsp(272,36) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f3.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${row[columnName]}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fset_005f3 = _jspx_th_c_005fset_005f3.doStartTag();
    if (_jspx_th_c_005fset_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f3);
    return false;
  }
}
